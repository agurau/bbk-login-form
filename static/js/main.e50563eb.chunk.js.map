{"version":3,"sources":["logo.svg","components/Input/Input.jsx","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","htmlFor","id","title","type","value","onChange","class","error","Button","onClick","name","App","useState","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","console","log","onSubmit","e","preventDefault","alert","newEmail","target","length","test","newPassword","lenght","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,YCYAA,EAVD,SAAAC,GACZ,OACE,sBAAKC,UAAU,cAAf,UACE,uBAAOC,QAASF,EAAMG,GAAtB,SAA2BH,EAAMI,QACjC,uBAAOC,KAAML,EAAMK,KAAMF,GAAIH,EAAMG,GAAIG,MAAON,EAAMM,MAAOC,SAAUP,EAAMO,WAC3E,mBAAGC,MAAM,cAAT,SAAwBR,EAAMS,YCKrBC,G,MARA,SAACV,GACd,OACE,wBAAQK,KAAML,EAAMK,MAAQ,SAAUJ,UAAU,SAASU,QAASX,EAAMW,QAAxE,SACGX,EAAMY,SC8DEC,MA7Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAoCJ,mBAAS,2BAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0CN,mBAAS,6BAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KA2CA,OAFAC,QAAQC,IAAIT,EAAOE,GAGjB,sBAAKhB,UAAU,MAAf,UACE,4CAEA,uBAAMwB,SA7CgB,SAACC,GACzBA,EAAEC,iBACFJ,QAAQC,IAAI,kBAERL,GAAcE,EAChBO,MAAM,gCAENA,MAAM,6BAAD,OAA8Bb,KAsCnC,UACA,cAAC,EAAD,CAAOV,KAAK,QAAQD,MAAM,UAAUD,GAAG,QAAQG,MAAOS,EAAOR,SAnCvC,SAACmB,GACzB,IAAMG,EAAWH,EAAEI,OAAOxB,MAC1BU,EAASa,GAEe,IAApBA,EAASE,OACXX,EAAc,2BACJ,0JAA0JY,KAAKH,GAGzKT,EAAc,IAFdA,EAAc,iCA4B4EX,MAAOU,IACjG,cAAC,EAAD,CAAOd,KAAK,WAAWD,MAAM,aAAaD,GAAG,WAAWG,MAAOW,EAAUV,SAvBhD,SAACmB,GAC5B,IAAMO,EAAcP,EAAEI,OAAOxB,MAC7BY,EAAYe,GAEe,IAAvBA,EAAYC,OACdZ,EAAiB,6BACRW,EAAYC,OAAS,EAC9BZ,EAAiB,0DACP,KAAKU,KAAKC,GAGpBX,EAAiB,IAFjBA,EAAiB,4CAcwFb,MAAOY,IAChH,cAAC,EAAD,CAAQhB,KAAK,SAASO,KAAK,iBCnDlBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e50563eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nconst Input = props => {\r\n  return (\r\n    <div className=\"input-field\">\r\n      <label htmlFor={props.id}>{props.title}</label>\r\n      <input type={props.type} id={props.id} value={props.value} onChange={props.onChange} />\r\n      <p class=\"input-error\">{props.error}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from \"react\";\r\n\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button type={props.type || \"button\"} className=\"button\" onClick={props.onClick}>\r\n      {props.name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Input from \"./components/Input/Input\"\nimport Button from \"./components/Button/Button\"\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [emailError, setEmailError] = useState(\"Please provide an email\");\n  const [passwordError, setPasswordError] = useState(\"Please provide a password\");\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault()\n    console.log(\"FORM SUBMITTED\")\n\n    if (emailError || passwordError) {\n      alert(\"Please fix login form errors\")\n    } else {\n      alert(`Logged in successfully as ${email}`) \n    }\n  }\n\n  const handleEmailChange = (e) => {\n    const newEmail = e.target.value;\n    setEmail(newEmail)\n\n    if (newEmail.length === 0) {\n      setEmailError(\"Please provide an email\")\n    } else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(newEmail)) {\n      setEmailError(\"Please provide a valid email\")\n    } else {\n      setEmailError(\"\")\n    }\n  }\n\n  const handlePasswordChange = (e) => {\n    const newPassword = e.target.value;\n    setPassword(newPassword)\n\n    if (newPassword.lenght === 0) {\n      setPasswordError(\"Please provide a password\")\n    } else if (newPassword.lenght < 8) {\n      setPasswordError(\"Please provide a password of a minimum of 8 characters\")\n    } else if (!/\\d/.test(newPassword)) {\n      setPasswordError(\"Please provide a password with a number\")\n    } else {\n      setPasswordError(\"\")\n    }\n  }\n\n  console.log(email, password)\n\n  return (\n    <div className=\"App\">\n      <h1>Login Form</h1>\n\n      <form onSubmit={handleLoginSubmit} >\n      <Input type=\"email\" title=\"Email: \" id=\"email\" value={email} onChange={handleEmailChange} error={emailError}  />\n      <Input type=\"password\" title=\"Password: \" id=\"password\" value={password} onChange={handlePasswordChange} error={passwordError} />\n      <Button type=\"submit\" name=\"Login\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}